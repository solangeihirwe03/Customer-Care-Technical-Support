{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Articles",
        "description": "APIs for articles",
        "termsOfServices": "https://github.com/solangeihirwe03/Customer-Care-Technical-Support.git",
        "contact": {
            "email": "solangeihirwe@gmail.com"
        },
        "license": {
            "name": "ISC"
        }
    },
    "host": "localhost:3000",
    "host-live": "",
    "basePath": "/api",
    "tags": [
        {
            "name": "Initial Route",
            "description": "initial Endpoint | GET Route"
        },
        {
            "name": "Authentication Routes",
            "description": "Authentication Endpoints"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Initial Route"
                ],
                "summary": "Handle Initial Route/ Wrong GET Route",
                "description": "By using the initial/Wrong GET endpoint, you will see welcome message(Welcome to Articles API)",
                "responses": {
                    "200": {
                        "description": "Success. (Welcome to Articles API.)"
                    }
                }
            }
        },
        "/api/user/register-user": {
            "post": {
                "tags": [
                    "Authentication Routes"
                ],
                "summary": "Register new user",
                "description": "This endpoint allows users to register by providing email and password.",
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created Successfully. please login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Account already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}